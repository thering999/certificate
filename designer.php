<?php
require_once 'db.php';
require_once 'assets/template_gallery.class.php';
session_start();
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit;
}

// Initialize template gallery
$gallery = new TemplateGallery($conn);

$alert = '';
if (isset($_SESSION['alert'])) {
    $alert = $_SESSION['alert'];
    unset($_SESSION['alert']);
}

$result = $conn->query('SELECT COUNT(*) as count FROM certificate_names');
$total_names = $result ? $result->fetch_assoc()['count'] : 0;
?>

<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Certificate Generator - Drag & Drop Interface</title>
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <!-- JSZip and FileSaver for client-side ZIP export -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Sarabun:wght@100;200;300;400;500;600;700;800&family=Prompt:wght@100;200;300;400;500;600;700;800;900&family=Kanit:wght@100;200;300;400;500;600;700;800;900&family=IBM+Plex+Sans+Thai:wght@100;200;300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="assets/style.css?v=<?= time() % 86400 ?>" rel="stylesheet">
    <link href="assets/designer.css?v=<?= time() % 86400 ?>" rel="stylesheet">
    <link href="assets/design-tips-panel.css?v=<?= time() % 86400 ?>" rel="stylesheet">
    <script>
        // Debug: Show current user_id in console on page load
        window.CURRENT_USER_ID = <?= $_SESSION['user_id'] ?>;
        console.log('üîç Current logged-in user_id:', window.CURRENT_USER_ID);
    </script>
    <style>
        .design-area {
            position: relative;
            background-size: cover;
            background-position: center;
            border: 2px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            cursor: crosshair;
        }
        
        .draggable-text {
            position: absolute;
            cursor: move;
            border: 2px dashed transparent;
            padding: 5px;
            min-width: 100px;
            background: rgba(255,255,255,0.9);
            border-radius: 4px;
            user-select: none;
            transition: all 0.2s;
        }
        
        .draggable-text:hover {
            border: 2px dashed #007bff;
            background: rgba(255,255,255,0.95);
        }
        
        .draggable-text.active {
            border: 2px solid #007bff;
            background: rgba(255,255,255,1);
            box-shadow: 0 0 10px rgba(0,123,255,0.3);
        }
        
        .text-toolbar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }
        
        .preview-container {
            position: relative;
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .feature-card {
            border: none;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            transition: transform 0.2s;
        }
        
        .feature-card:hover {
            transform: translateY(-2px);
        }
        
        /* Compact card design */
        .card-header {
            border-bottom: 1px solid rgba(255,255,255,0.2);
        }
        
        .fs-7 {
            font-size: 0.875rem;
        }
        
        /* History improvements */
        .history-item {
            background: white;
            border-radius: 6px;
            padding: 8px;
            text-align: center;
            font-size: 11px;
            line-height: 1.3;
        }
        
        @media (max-width: 992px) {
            .col-lg-8, .col-lg-4 {
                margin-bottom: 20px;
            }
            
            .design-area {
                height: 500px !important;
            }
        }
        
        @media (max-width: 768px) {
            .design-area {
                height: 400px !important;
            }
            
            .draggable-text {
                min-width: 80px;
                font-size: 12px !important;
            }
            
            .card-body {
                padding: 0.75rem !important;
            }
            
            .preview-container {
                height: 150px !important;
            }
        }
        
        .btn-toolbar {
            gap: 10px;
        }
        
        .empty-state {
            background: rgba(255,255,255,0.9);
            border-radius: 10px;
            padding: 30px;
            backdrop-filter: blur(5px);
        }
        
        .template-card {
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .template-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        
        .history-item {
            cursor: pointer;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            overflow: hidden;
            transition: all 0.2s;
        }
        
        .history-item:hover {
            border-color: #007bff;
            transform: scale(1.02);
        }
        
        .history-thumbnail {
            height: 60px;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <i class="fas fa-certificate me-2"></i>Certificate Generator Pro
            </a>
            <div class="navbar-nav ms-auto">
                <span class="badge bg-light text-dark px-3 py-2 me-3" style="font-size: 11px;">
                    <i class="fas fa-user-circle me-2"></i>
                    <?= isset($_SESSION['role']) ? ($_SESSION['role'] === 'admin' ? 'üëë Admin' : 'üë§ User') : 'üë§ User' ?>
                    : <?= htmlspecialchars($_SESSION['username'] ?? '') ?>
                </span>
                <a href="index.php" class="nav-link"><i class="fas fa-home me-1"></i>‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
                <a href="dashboard.php" class="nav-link"><i class="fas fa-th-large me-1"></i>Dashboard</a>
                <a class="nav-link" href="logout.php">
                    <i class="fas fa-sign-out-alt me-1"></i>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                </a>
            </div>
        </div>
    </nav>

    <div class="container-fluid py-3 px-3">
        <?php if ($alert): ?>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i><?= $alert ?>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
        <?php endif; ?>

        <!-- Main Interface -->
        <div class="d-flex flex-column gap-0">
            <!-- Top Row: Design Area + Right Sidebar -->
            <div class="row g-0">
                <!-- Design Area - LEFT SIDE -->
                <div class="col-lg-8">
                    <div class="card feature-card w-100">
                        <div class="card-header bg-primary text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">
                                    <i class="fas fa-palette me-2"></i>‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
                                </h5>
                                <div class="btn-group">
                                    <button class="btn btn-success btn-sm" onclick="addNewText()">
                                        <i class="fas fa-plus me-1"></i>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                                    </button>
                                    <button type="button" class="btn btn-info btn-sm" onclick="showTemplateGallery()">
                                        <i class="fas fa-images me-1"></i>Template Gallery
                                    </button>
                                    <button class="btn btn-warning btn-sm" onclick="exportCertificates()">
                                        <i class="fas fa-download me-1"></i>‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PNG
                                    </button>
                                    <button class="btn btn-success btn-sm" onclick="exportDesignsZip()">
                                        <i class="fas fa-file-archive me-1"></i>‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å ZIP
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body p-2">
                            <div id="design-area" class="design-area position-relative" style="height: 600px; width: 100%; border: 2px solid #dee2e6; border-radius: 8px; overflow: hidden; background-image: url('<?= isset($_SESSION['bg_path']) ? $_SESSION['bg_path'] : 'assets/default_bg.jpg' ?>');">
                                <div class="d-flex align-items-center justify-content-center h-100 text-muted" id="empty-state">
                                    <div class="text-center">
                                        <i class="fas fa-mouse-pointer fa-3x mb-3"></i>
                                        <h5>‡∏Ñ‡∏•‡∏¥‡∏Å "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö</h5>
                                        <p>‡∏•‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡πâ‡∏≤‡∏¢‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á | ‡∏î‡∏±‡∏ö‡πÄ‡∏ö‡∏¥‡∏•‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Right Sidebar: Upload + History + Preview -->
                <div class="col-lg-4" style="padding-left: 0;">
                    <div class="d-flex flex-column gap-2" style="height: 100%;">
                        <!-- ‚¨ÜÔ∏è Upload Section - TOP -->
                        <div class="card feature-card shadow-sm" style="flex-shrink: 0;">
                            <div class="card-header bg-info text-white py-1">
                                <h6 class="mb-0 fs-7"><i class="fas fa-upload me-1"></i>‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• / ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á</h6>
                            </div>
                            <div class="card-body p-1">
                                <!-- CSV Upload -->
                                <form action="upload.php" method="post" enctype="multipart/form-data">
                                    <div class="mb-1">
                                        <label class="form-label small mb-1" style="font-size: 10px; color: #333; font-weight: 600;">
                                            üìÑ ‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ (.csv)
                                            <a href="download_sample_csv.php" class="text-decoration-none float-end" style="font-size: 9px;" title="‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á">
                                                <i class="fas fa-download"></i> ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                                            </a>
                                        </label>
                                        <input type="file" class="form-control form-control-sm" name="excelFile" accept=".csv">
                                    </div>
                                    <button type="submit" class="btn btn-info btn-sm w-100 mb-1" style="font-size: 10px; padding: 5px 2px;">
                                        <i class="fas fa-upload me-1"></i>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î CSV
                                    </button>
                                </form>
                                <div class="text-center mb-1">
                                    <span class="badge bg-info" style="font-size: 9px;"><?= $total_names ?> ‡∏Ñ‡∏ô</span>
                                </div>
                                
                                <!-- Background Upload -->
                                <form id="bgUploadForm" enctype="multipart/form-data">
                                    <div class="mb-1">
                                        <label class="form-label small mb-1" style="font-size: 10px; color: #333; font-weight: 600;">üñºÔ∏è ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà</label>
                                        <input type="file" id="bgImageInput" class="form-control form-control-sm" name="bg_image" accept=".jpg,.jpeg,.png,.gif,.webp">
                                    </div>
                                    <button type="button" id="bgUploadBtn" class="btn btn-warning btn-sm w-100" onclick="uploadBackgroundImage()" style="font-size: 10px; padding: 5px 2px;">
                                        <i class="fas fa-upload me-1"></i>‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
                                    </button>
                                </form>
                                <div id="bgUploadStatus" class="mt-1"></div>
                            </div>
                        </div>

                        <!-- (Removed duplicate Design Tips in right sidebar - kept bottom Tips under design area) -->

                        <!-- ÔøΩ Design History -->
                        <div class="card feature-card shadow-sm" style="flex-shrink: 0;">
                            <div class="card-header bg-warning text-dark py-1">
                                <h6 class="mb-0 fs-7"><i class="fas fa-history me-1"></i>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ Design</h6>
                            </div>
                            <div class="card-body p-1" style="max-height: 150px; overflow-y: auto;">
                                <div id="designHistoryList" class="list-group list-group-flush">
                                    <div class="text-center text-muted py-3">
                                        <small><i class="fas fa-inbox"></i> ‡πÑ‡∏°‡πà‡∏°‡∏µ Design ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- ÔøΩüëÅÔ∏è Preview -->
                        <div class="card feature-card shadow-sm" style="flex-shrink: 0;">
                            <div class="card-header bg-success text-white py-1">
                                <h6 class="mb-0 fs-7"><i class="fas fa-eye me-1"></i>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</h6>
                            </div>
                            <div class="card-body p-1">
                                <?php
                                // ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á 10 ‡∏Ñ‡∏ô - ‡πÉ‡∏ä‡πâ Prepared Statement
                                $user_id = $_SESSION['user_id'];
                                $names_result = $conn->prepare("SELECT id, name FROM certificate_names WHERE user_id = ? ORDER BY id ASC");
                                $names_result->bind_param("i", $user_id);
                                $names_result->execute();
                                $names_result = $names_result->get_result();
                                $names = [];
                                if ($names_result && $names_result->num_rows > 0) {
                                    while ($row = $names_result->fetch_assoc()) {
                                        $names[] = $row['name'];
                                    }
                                }
                                ?>
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <label class="form-label" style="font-size: 10px; font-weight: 600; color: #333; margin-bottom: 0;">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠ Preview (<?php echo count($names); ?> ‡∏Ñ‡∏ô)</label>
                                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="showNamesManagement()" style="font-size: 9px; padding: 0.2rem 0.5rem;">
                                            <i class="fas fa-edit me-1"></i>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
                                        </button>
                                    </div>
                                    <select id="previewSelect" class="form-select form-select-sm" style="font-size: 10px;">
                                        <?php if (empty($names)): ?>
                                            <option>‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ</option>
                                        <?php else: ?>
                                            <?php foreach ($names as $name): ?>
                                            <option value="<?= htmlspecialchars($name) ?>"><?= htmlspecialchars($name) ?></option>
                                            <?php endforeach; ?>
                                        <?php endif; ?>
                                    </select>
                                </div>
                                
                                <div class="preview-container border rounded" style="height: 280px; background-color: #f8f9fa; overflow: visible; position: relative; margin-top: 0.5rem;">
                                    <div id="preview-area" class="w-100 position-relative" style="height: 280px; background-image: url('<?= isset($_SESSION['bg_path']) ? $_SESSION['bg_path'] : 'assets/default_bg.jpg' ?>'); background-size: cover; background-position: center; overflow: visible; display: flex; align-items: center; justify-content: center;">
                                    </div>
                                </div>
                                
                                <!-- ‡∏õ‡∏∏‡πà‡∏° Save Design -->
                                <div class="mt-2">
                                    <button type="button" class="btn btn-success btn-sm w-100" onclick="saveDesign()">
                                        <i class="fas fa-save me-1"></i>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Design
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- ÔøΩ Design Tips Panel -->
                        <div class="card feature-card shadow-sm" style="flex-shrink: 0;">
                            <div class="card-header bg-primary text-white py-1">
                        <!-- ÔøΩüñºÔ∏è Background Examples (BOTTOM RIGHT) -->
                        <div class="card feature-card shadow-sm border-success border-2 flex-shrink: 0;" style="flex-shrink: 0;">
                            <div class="card-header bg-success text-white py-1">
                                <h6 class="mb-0 fs-7"><i class="fas fa-images me-1"></i>‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á</h6>
                            </div>
                            <div class="card-body p-2" style="max-height: 140px; overflow-y: auto; background-color: #f8f9fa;">
                                <div class="row g-2">
                                <?php
                                // ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå templete
                                $template_dir = 'templete';
                                $template_files = [];
                                
                                if (is_dir($template_dir)) {
                                    $files = array_diff(scandir($template_dir), ['.', '..']);
                                    foreach ($files as $file) {
                                        $ext = strtolower(pathinfo($file, PATHINFO_EXTENSION));
                                        if (in_array($ext, ['jpg', 'jpeg', 'png', 'gif', 'webp'])) {
                                            $template_files[] = $file;
                                        }
                                    }
                                }
                                
                                if (count($template_files) > 0):
                                    foreach ($template_files as $template_file):
                                        $template_path = $template_dir . '/' . $template_file;
                                        $sanitized_name = htmlspecialchars(pathinfo($template_file, PATHINFO_FILENAME));
                                ?>
                                <div class="col-4">
                                    <div class="card bg-light border-0 shadow-sm template-card" onclick="selectBackgroundTemplate('<?= addslashes($template_path) ?>')" style="cursor: pointer; transition: all 0.3s;">
                                        <div style="height: 70px; overflow: hidden; border-radius: 8px 8px 0 0; background: #f5f5f5;">
                                            <img src="<?= $template_path ?>" alt="<?= $sanitized_name ?>" style="width: 100%; height: 100%; object-fit: cover;">
                                        </div>
                                        <div class="card-body p-1">
                                            <small class="text-center d-block text-truncate" title="<?= $sanitized_name ?>" style="font-size: 7px; line-height: 1.1; color: #333;">
                                                ‚úì<?= substr($sanitized_name, 0, 8) ?>
                                            </small>
                                        </div>
                                    </div>
                                </div>
                                <?php
                                    endforeach;
                                else:
                                ?>
                                <div class="col-12">
                                    <small class="text-muted d-block text-center" style="font-size: 8px;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</small>
                                </div>
                                <?php endif; ?>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>

                <!-- REMOVED: Old History and Preview sections were here -->

    <!-- Template Gallery Modal -->
    <div class="modal fade" id="templateGalleryModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-images me-2"></i>Template Gallery - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row g-3">
                        <!-- Government Templates -->
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2">
                                <i class="fas fa-university me-2"></i>‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£ / ‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£
                            </h6>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('gov_standard')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #1a237e 0%, #3949ab 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div class="fw-bold">‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ò‡∏¥‡∏Å‡∏≤‡∏£</div>
                                        <div style="font-size: 16px; margin: 8px 0;">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏Ñ‡∏∏‡∏ì</div>
                                        <div>‡∏Ç‡∏≠‡∏°‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πà<br><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô</h6>
                                    <p class="card-text small text-muted">‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('gov_formal')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #2e7d32 0%, #66bb6a 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div class="fw-bold">‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£</div>
                                        <div style="font-size: 16px; margin: 8px 0;">‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï</div>
                                        <div><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span><br>‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ö‡∏£‡∏°</div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Å‡∏≤‡∏£‡∏≠‡∏ö‡∏£‡∏°</h6>
                                    <p class="card-text small text-muted">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('gov_achievement')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #c2185b 0%, #e91e63 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div style="font-size: 16px; margin: 8px 0;">‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>
                                        <div><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                        <div class="fw-bold">‡∏ú‡∏π‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô</div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</h6>
                                    <p class="card-text small text-muted">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Modern Templates -->
                        <div class="col-12 mt-4">
                            <h6 class="text-success border-bottom pb-2">
                                <i class="fas fa-star me-2"></i>‡πÅ‡∏ö‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô / ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå
                            </h6>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('modern_tech')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #1e88e5 0%, #42a5f5 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div style="font-size: 18px; font-weight: bold;">CERTIFICATE</div>
                                        <div class="my-2">of Technology Excellence</div>
                                        <div><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ</h6>
                                    <p class="card-text small text-muted">‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏≤‡∏ô IT ‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('modern_creative')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #9c27b0 0%, #ba68c8 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div style="font-size: 16px;">üé® CREATIVE AWARD üé®</div>
                                        <div class="my-2"><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                        <div>‡∏ô‡∏±‡∏Å‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô</div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå</h6>
                                    <p class="card-text small text-muted">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏®‡∏¥‡∏•‡∏õ‡∏∞‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('modern_business')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #37474f 0%, #607d8b 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div class="fw-bold">BUSINESS EXCELLENCE</div>
                                        <div class="my-2">Certificate of Achievement</div>
                                        <div><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</h6>
                                    <p class="card-text small text-muted">‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡πÅ‡∏•‡∏∞‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</p>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Elegant Templates -->
                        <div class="col-12 mt-4">
                            <h6 class="text-warning border-bottom pb-2">
                                <i class="fas fa-crown me-2"></i>‡πÅ‡∏ö‡∏ö‡∏´‡∏£‡∏π‡∏´‡∏£‡∏≤ / ‡∏û‡∏¥‡πÄ‡∏®‡∏©
                            </h6>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('elegant_gold')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #bf9000 0%, #ffcc02 100%); position: relative;">
                                    <div class="text-dark text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div style="font-size: 16px;">‚ú® GOLDEN AWARD ‚ú®</div>
                                        <div class="my-2 fw-bold">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏¢‡∏®</div>
                                        <div><span style="color: #8b4513;">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥</h6>
                                    <p class="card-text small text-muted">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏¢‡∏®‡∏™‡∏π‡∏á</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('elegant_royal')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #4a148c 0%, #8e24aa 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 11px;">
                                        <div>üëë ROYAL CERTIFICATE üëë</div>
                                        <div class="my-2">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡§∞‡∏ï‡∏¥‡∏¢‡∏®‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</div>
                                        <div><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏´‡∏•‡∏ß‡∏á</h6>
                                    <p class="card-text small text-muted">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏¢‡∏®‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="template-card card h-100" onclick="loadTemplateFromGallery('elegant_classic')">
                                <div class="card-img-top bg-gradient" style="height: 150px; background: linear-gradient(135deg, #5d4037 0%, #8d6e63 100%); position: relative;">
                                    <div class="text-white text-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 12px;">
                                        <div>üèõÔ∏è CLASSIC HONOR üèõÔ∏è</div>
                                        <div class="my-2">Certificate of Merit</div>
                                        <div><span class="text-warning">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span></div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Ñ</h6>
                                    <p class="card-text small text-muted">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">‡∏õ‡∏¥‡∏î</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Text Edit Modal -->
    <div class="modal fade" id="textEditModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</label>
                        <input type="text" id="editTextContent" class="form-control" placeholder="‡πÉ‡∏ä‡πâ {name} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ä‡∏∑‡πà‡∏≠">
                        <div class="form-text">‡πÄ‡∏ä‡πà‡∏ô: {name} ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ô‡∏≤‡∏¢/‡∏ô‡∏≤‡∏á {name}</div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <label class="form-label">‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå</label>
                            <input type="number" id="editFontSize" class="form-control" min="10" max="100" value="32">
                        </div>
                        <div class="col-6">
                            <label class="form-label">‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</label>
                            <input type="color" id="editFontColor" class="form-control form-control-color" value="#000000">
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-4">
                            <label class="form-label">‡∏ü‡∏≠‡∏ô‡∏ï‡πå</label>
                            <select id="editFontFamily" class="form-select">
                                <optgroup label="‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£ / ‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£">
                                    <option value="Sarabun">Sarabun (‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ - ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà)</option>
                                    <option value="TH Sarabun New">TH Sarabun New (‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£)</option>
                                    <option value="Angsana New">Angsana New (‡∏≠‡∏±‡∏á‡∏™‡∏ô‡∏≤ ‡∏ô‡∏¥‡∏ß)</option>
                                    <option value="Cordia New">Cordia New (‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢ ‡∏ô‡∏¥‡∏ß)</option>
                                </optgroup>
                                <optgroup label="‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡∏™‡∏ß‡∏¢ / ‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô">
                                    <option value="Prompt">Prompt (‡∏û‡∏£‡∏≠‡∏°‡∏û‡πå‡∏ó‡πå - ‡∏™‡∏ß‡∏¢‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô)</option>
                                    <option value="Kanit">Kanit (‡∏Å‡∏ô‡∏¥‡∏©‡∏ê‡πå - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏´‡∏£‡∏π)</option>
                                    <option value="IBM Plex Sans Thai">IBM Plex Sans Thai (‡πÑ‡∏≠‡∏ö‡∏µ‡πÄ‡∏≠‡πá‡∏° - ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ)</option>
                                </optgroup>
                                <optgroup label="‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Ñ">
                                    <option value="DilleniaUPC">DilleniaUPC (‡∏î‡∏¥‡∏•‡πÄ‡∏•‡πÄ‡∏ô‡∏µ‡∏¢ - ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°)</option>
                                    <option value="EucrosiaUPC">EucrosiaUPC (‡∏¢‡∏π‡πÇ‡∏Ñ‡∏£‡πÄ‡∏ã‡∏µ‡∏¢ - ‡∏´‡∏£‡∏π‡∏´‡∏£‡∏≤)</option>
                                    <option value="IrisUPC">IrisUPC (‡πÑ‡∏≠‡∏£‡∏¥‡∏™ - ‡∏ô‡∏∏‡πà‡∏°‡∏ô‡∏ß‡∏•)</option>
                                    <option value="JasmineUPC">JasmineUPC (‡∏à‡∏±‡∏™‡∏°‡∏¥‡∏ô - ‡∏≠‡πà‡∏≠‡∏ô‡∏´‡∏ß‡∏≤‡∏ô)</option>
                                    <option value="KodchiangUPC">KodchiangUPC (‡πÇ‡∏Å‡∏î‡πÄ‡∏à‡∏µ‡∏¢‡∏á - ‡πÇ‡∏ö‡∏£‡∏≤‡∏ì)</option>
                                    <option value="LilyUPC">LilyUPC (‡∏•‡∏¥‡∏•‡∏•‡∏µ‡πà - ‡∏™‡∏î‡πÉ‡∏™)</option>
                                </optgroup>
                                <optgroup label="‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©">
                                    <option value="Times New Roman">Times New Roman (‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£)</option>
                                    <option value="Georgia">Georgia (‡∏™‡∏á‡πà‡∏≤‡∏á‡∏≤‡∏°)</option>
                                    <option value="Arial">Arial (‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢)</option>
                                    <option value="Verdana">Verdana (‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô)</option>
                                    <option value="Tahoma">Tahoma (‡∏Ñ‡∏°‡∏ä‡∏±‡∏î)</option>
                                    <option value="Impact">Impact (‡∏´‡∏ô‡∏≤/‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô)</option>
                                    <option value="Trebuchet MS">Trebuchet MS (‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô)</option>
                                    <option value="Comic Sans MS">Comic Sans MS (‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å)</option>
                                </optgroup>
                            </select>
                        </div>
                        <div class="col-4">
                            <label class="form-label">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ü‡∏≠‡∏ô‡∏ï‡πå</label>
                            <select id="editFontWeight" class="form-select">
                                <option value="100">‡∏ö‡∏≤‡∏á‡∏°‡∏≤‡∏Å (100)</option>
                                <option value="200">‡∏ö‡∏≤‡∏á (200)</option>
                                <option value="300">‡πÄ‡∏ö‡∏≤ (300)</option>
                                <option value="400" selected>‡∏õ‡∏Å‡∏ï‡∏¥ (400)</option>
                                <option value="500">‡∏Å‡∏∂‡πà‡∏á‡∏´‡∏ô‡∏≤ (500)</option>
                                <option value="600">‡∏´‡∏ô‡∏≤‡∏û‡∏≠‡∏î‡∏µ (600)</option>
                                <option value="700">‡∏´‡∏ô‡∏≤ (700)</option>
                                <option value="800">‡∏´‡∏ô‡∏≤‡∏°‡∏≤‡∏Å (800)</option>
                                <option value="900">‡∏´‡∏ô‡∏≤‡∏™‡∏∏‡∏î (900)</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <label class="form-label">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</label>
                            <select id="editTextAlign" class="form-select">
                                <option value="left">‡∏ã‡πâ‡∏≤‡∏¢</option>
                                <option value="center">‡∏Å‡∏•‡∏≤‡∏á</option>
                                <option value="right">‡∏Ç‡∏ß‡∏≤</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-6">
                            <label class="form-label">‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</label>
                            <select id="editTextDecoration" class="form-select">
                                <option value="none">‡∏õ‡∏Å‡∏ï‡∏¥</option>
                                <option value="underline">‡∏Ç‡∏µ‡∏î‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏ï‡πâ</option>
                                <option value="overline">‡∏Ç‡∏µ‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏ö‡∏ô</option>
                                <option value="line-through">‡∏Ç‡∏µ‡∏î‡∏Ü‡πà‡∏≤</option>
                            </select>
                        </div>
                        <div class="col-6">
                            <label class="form-label">‡πÄ‡∏á‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</label>
                            <select id="editTextShadow" class="form-select">
                                <option value="none">‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏≤</option>
                                <option value="light">‡πÄ‡∏á‡∏≤‡∏≠‡πà‡∏≠‡∏ô</option>
                                <option value="medium">‡πÄ‡∏á‡∏≤‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</option>
                                <option value="strong">‡πÄ‡∏á‡∏≤‡πÄ‡∏Ç‡πâ‡∏°</option>
                                <option value="glow">‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="deleteTextBtn">‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                    <button type="button" class="btn btn-primary" id="saveTextBtn">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let textElements = [];
        let currentEditingElement = null;
        let elementCounter = 0;

        // Upload Background Image with AJAX
        function uploadBackgroundImage() {
            const form = document.getElementById('bgUploadForm');
            const input = document.getElementById('bgImageInput');
            const statusDiv = document.getElementById('bgUploadStatus');
            const uploadBtn = document.getElementById('bgUploadBtn');
            
            if (!input.files || input.files.length === 0) {
                statusDiv.innerHTML = '<div class="alert alert-warning alert-sm py-1 mb-0">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô</div>';
                return;
            }
            
            // Validate file size
            const file = input.files[0];
            const maxSize = 50 * 1024 * 1024; // 50MB
            if (file.size > maxSize) {
                statusDiv.innerHTML = '<div class="alert alert-danger alert-sm py-1 mb-0">‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà 50MB)</div>';
                return;
            }
            
            // Validate file type
            const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
            if (!allowedTypes.includes(file.type)) {
                statusDiv.innerHTML = '<div class="alert alert-danger alert-sm py-1 mb-0">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (JPG, PNG, GIF, WebP ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)</div>';
                return;
            }
            
            // Show uploading status
            uploadBtn.disabled = true;
            statusDiv.innerHTML = '<div class="alert alert-info alert-sm py-1 mb-0"><i class="fas fa-spinner fa-spin me-1"></i>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î...</div>';
            
            const formData = new FormData();
            formData.append('bg_image', file);
            
            fetch('upload_bg.php', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(result => {
                // Extract success message from response
                if (result.includes('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')) {
                    // Update background immediately
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const imgUrl = e.target.result;
                        document.getElementById('design-area').style.backgroundImage = `url('${imgUrl}')`;
                        document.getElementById('preview-area').style.backgroundImage = `url('${imgUrl}')`;
                        
                        // Store in session storage for persistence
                        sessionStorage.setItem('bgImage', imgUrl);
                        
                        statusDiv.innerHTML = '<div class="alert alert-success alert-sm py-1 mb-0"><i class="fas fa-check-circle me-1"></i>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</div>';
                        input.value = '';
                        
                        // Clear status after 3 seconds
                        setTimeout(() => {
                            statusDiv.innerHTML = '';
                        }, 3000);
                    };
                    reader.readAsDataURL(file);
                } else if (result.includes('‡πÑ‡∏°‡πà')) {
                    statusDiv.innerHTML = '<div class="alert alert-danger alert-sm py-1 mb-0"><i class="fas fa-exclamation-circle me-1"></i>' + result.substring(0, 50) + '</div>';
                } else {
                    statusDiv.innerHTML = '<div class="alert alert-danger alert-sm py-1 mb-0"><i class="fas fa-exclamation-circle me-1"></i>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>';
                }
                uploadBtn.disabled = false;
            })
            .catch(error => {
                statusDiv.innerHTML = '<div class="alert alert-danger alert-sm py-1 mb-0"><i class="fas fa-exclamation-circle me-1"></i>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message + '</div>';
                uploadBtn.disabled = false;
            });
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
        function addNewText() {
            elementCounter++;
            const newElement = {
                id: 'text_' + elementCounter,
                content: '{name}',
                x: 100 + (elementCounter * 20),
                y: 100 + (elementCounter * 30),
                fontSize: 40,
                fontFamily: 'Sarabun',
                fontWeight: '600',
                textDecoration: 'none',
                textShadow: 'medium',
                color: '#1a237e',
                align: 'center'
            };
            
            textElements.push(newElement);
            renderTextElements();
            updatePreview();
            
            // ‡∏ã‡πà‡∏≠‡∏ô empty state
            document.getElementById('empty-state').style.display = 'none';
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö
        function renderTextElements(customName = null) {
            const container = document.getElementById('design-area');
            const displayName = customName || document.getElementById('previewSelect')?.value || '‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á';
            
            // ‡∏•‡∏ö text elements ‡πÄ‡∏Å‡πà‡∏≤
            container.querySelectorAll('.draggable-text').forEach(el => el.remove());
            
            textElements.forEach(element => {
                const textDiv = document.createElement('div');
                textDiv.className = 'draggable-text';
                textDiv.id = element.id;
                textDiv.textContent = element.content.replace(/{name}/g, displayName);
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á text shadow CSS
                let shadowCSS = 'none';
                switch(element.textShadow || 'none') {
                    case 'light': shadowCSS = '1px 1px 2px rgba(0,0,0,0.3)'; break;
                    case 'medium': shadowCSS = '2px 2px 4px rgba(0,0,0,0.5)'; break;
                    case 'strong': shadowCSS = '3px 3px 6px rgba(0,0,0,0.7)'; break;
                    case 'glow': shadowCSS = '0 0 10px rgba(255,255,255,0.8), 0 0 20px rgba(255,255,255,0.6)'; break;
                }
                
                textDiv.style.cssText = `
                    left: ${element.x}px;
                    top: ${element.y}px;
                    font-size: ${element.fontSize}px;
                    font-family: '${element.fontFamily}', sans-serif;
                    font-weight: ${element.fontWeight || '400'};
                    text-decoration: ${element.textDecoration || 'none'};
                    text-shadow: ${shadowCSS};
                    color: ${element.color};
                    text-align: ${element.align};
                    position: absolute;
                    cursor: move;
                    white-space: nowrap;
                    user-select: none;
                `;
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° delete button overlay
                const deleteBtn = document.createElement('button');
                deleteBtn.className = 'delete-text-btn';
                deleteBtn.innerHTML = '√ó';
                deleteBtn.style.cssText = `
                    position: absolute;
                    top: -10px;
                    right: -10px;
                    width: 24px;
                    height: 24px;
                    padding: 0;
                    background: #dc3545;
                    border: 2px solid white;
                    color: white;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 18px;
                    line-height: 1;
                    display: none;
                    z-index: 10;
                    font-weight: bold;
                    transition: all 0.2s;
                `;
                
                deleteBtn.onclick = function(e) {
                    e.stopPropagation();
                    if (confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                        textElements = textElements.filter(el => el.id !== element.id);
                        renderTextElements();
                        updatePreview();
                        if (textElements.length === 0) {
                            document.getElementById('empty-state').style.display = 'flex';
                        }
                    }
                };
                
                deleteBtn.onmouseover = function() {
                    this.style.background = '#bb2d28';
                    this.style.boxShadow = '0 0 8px rgba(220, 53, 69, 0.5)';
                };
                
                deleteBtn.onmouseout = function() {
                    this.style.background = '#dc3545';
                    this.style.boxShadow = 'none';
                };
                
                textDiv.appendChild(deleteBtn);
                
                // Show delete button on hover
                textDiv.addEventListener('mouseenter', function() {
                    deleteBtn.style.display = 'block';
                });
                
                textDiv.addEventListener('mouseleave', function() {
                    deleteBtn.style.display = 'none';
                });
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° double click ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                textDiv.addEventListener('dblclick', function() {
                    editTextElement(element.id);
                });
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° right click context menu
                textDiv.addEventListener('contextmenu', function(e) {
                    e.preventDefault();
                    if (confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                        textElements = textElements.filter(el => el.id !== element.id);
                        renderTextElements();
                        updatePreview();
                        if (textElements.length === 0) {
                            document.getElementById('empty-state').style.display = 'flex';
                        }
                    }
                });
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° drag functionality
                makeDraggable(textDiv, element);
                
                container.appendChild(textDiv);
            });
        }

        // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ element ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏≤‡∏Å‡πÑ‡∏î‡πâ
        function makeDraggable(element, dataElement) {
            let isDragging = false;
            let startX, startY, initialX, initialY;
            
            element.addEventListener('mousedown', function(e) {
                // Don't drag if clicking on delete button
                if (e.target.classList.contains('delete-text-btn')) {
                    return;
                }
                
                isDragging = true;
                startX = e.clientX;
                startY = e.clientY;
                initialX = dataElement.x;
                initialY = dataElement.y;
                
                element.classList.add('active');
                
                document.addEventListener('mousemove', onMouseMove);
                document.addEventListener('mouseup', onMouseUp);
                
                e.preventDefault();
            });
            
            function onMouseMove(e) {
                if (!isDragging) return;
                
                const deltaX = e.clientX - startX;
                const deltaY = e.clientY - startY;
                
                dataElement.x = Math.max(0, Math.min(800, initialX + deltaX));
                dataElement.y = Math.max(0, Math.min(500, initialY + deltaY));
                
                element.style.left = dataElement.x + 'px';
                element.style.top = dataElement.y + 'px';
                
                updatePreview();
            }
            
            function onMouseUp() {
                isDragging = false;
                element.classList.remove('active');
                
                document.removeEventListener('mousemove', onMouseMove);
                document.removeEventListener('mouseup', onMouseUp);
            }
        }

        // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        function editTextElement(elementId) {
            const element = textElements.find(el => el.id === elementId);
            if (!element) return;
            
            currentEditingElement = element;
            
            document.getElementById('editTextContent').value = element.content;
            document.getElementById('editFontSize').value = element.fontSize;
            document.getElementById('editFontColor').value = element.color;
            document.getElementById('editFontFamily').value = element.fontFamily;
            document.getElementById('editFontWeight').value = element.fontWeight || '400';
            document.getElementById('editTextDecoration').value = element.textDecoration || 'none';
            document.getElementById('editTextShadow').value = element.textShadow || 'none';
            document.getElementById('editTextAlign').value = element.align;
            
            new bootstrap.Modal(document.getElementById('textEditModal')).show();
        }

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        document.getElementById('saveTextBtn').addEventListener('click', function() {
            if (!currentEditingElement) return;
            
            currentEditingElement.content = document.getElementById('editTextContent').value;
            currentEditingElement.fontSize = parseInt(document.getElementById('editFontSize').value);
            currentEditingElement.color = document.getElementById('editFontColor').value;
            currentEditingElement.fontFamily = document.getElementById('editFontFamily').value;
            currentEditingElement.fontWeight = document.getElementById('editFontWeight').value;
            currentEditingElement.textDecoration = document.getElementById('editTextDecoration').value;
            currentEditingElement.textShadow = document.getElementById('editTextShadow').value;
            currentEditingElement.align = document.getElementById('editTextAlign').value;
            
            renderTextElements();
            updatePreview();
            
            bootstrap.Modal.getInstance(document.getElementById('textEditModal')).hide();
        });

        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        document.getElementById('deleteTextBtn').addEventListener('click', function() {
            if (!currentEditingElement) return;
            
            textElements = textElements.filter(el => el.id !== currentEditingElement.id);
            renderTextElements();
            updatePreview();
            
            if (textElements.length === 0) {
                document.getElementById('empty-state').style.display = 'flex';
            }
            
            bootstrap.Modal.getInstance(document.getElementById('textEditModal')).hide();
        });

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï preview - ‡πÉ‡∏´‡πâ mirror design area ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ 100%
        function updatePreview() {
            const previewArea = document.getElementById('preview-area');
            const previewName = document.getElementById('previewSelect') ? document.getElementById('previewSelect').value : '‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á';
            
            console.log('updatePreview called:', {
                textElementsCount: textElements.length,
                previewName: previewName,
                previewAreaExists: !!previewArea
            });
            
            if (!previewArea) {
                console.error('preview-area not found!');
                return;
            }
            
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï design area ‡∏î‡πâ‡∏ß‡∏¢
            renderTextElements(previewName);
            
            // ‡∏•‡∏ö preview elements ‡πÄ‡∏Å‡πà‡∏≤
            previewArea.querySelectorAll('.preview-text').forEach(el => el.remove());
            
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì scale ‡∏à‡∏≤‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î preview container ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö design canvas (800x600)
            // Preview ‡∏ï‡πâ‡∏≠‡∏á mirror design area ‡∏û‡∏≠‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏°‡∏µ offset centering
            const previewWidth = previewArea.offsetWidth || 280;
            const previewHeight = previewArea.offsetHeight || 280;
            const designCanvasWidth = 800;
            const designCanvasHeight = 600;
            
            // Scale ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ preview fit ‡πÉ‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á container
            const scale = Math.min(previewWidth / designCanvasWidth, previewHeight / designCanvasHeight);
            
            console.log(`Preview scale: ${scale} (preview: ${previewWidth}x${previewHeight}, design: ${designCanvasWidth}x${designCanvasHeight})`);
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏° preview elements ‡πÉ‡∏´‡∏°‡πà - ‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á x,y ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö design area ‡πÅ‡∏•‡πâ‡∏ß scale ‡∏•‡∏á
            textElements.forEach((element, index) => {
                console.log(`Adding text element ${index}:`, element.content);
                const textDiv = document.createElement('div');
                textDiv.className = 'preview-text';
                textDiv.textContent = element.content.replace(/{name}/g, previewName);
                
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á text shadow CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö preview
                let previewShadow = 'none';
                switch(element.textShadow || 'none') {
                    case 'light': previewShadow = '0.3px 0.3px 0.6px rgba(0,0,0,0.3)'; break;
                    case 'medium': previewShadow = '0.6px 0.6px 1.2px rgba(0,0,0,0.5)'; break;
                    case 'strong': previewShadow = '0.9px 0.9px 1.8px rgba(0,0,0,0.7)'; break;
                    case 'glow': previewShadow = '0 0 3px rgba(255,255,255,0.8), 0 0 6px rgba(255,255,255,0.6)'; break;
                }
                
                // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô preview = ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô design * scale (‡πÑ‡∏°‡πà‡∏°‡∏µ offset)
                const previewX = element.x * scale;
                const previewY = element.y * scale;
                
                textDiv.style.cssText = `
                    position: absolute;
                    left: ${previewX}px;
                    top: ${previewY}px;
                    font-size: ${element.fontSize * scale}px;
                    font-family: '${element.fontFamily}', sans-serif;
                    font-weight: ${element.fontWeight || '400'};
                    text-decoration: ${element.textDecoration || 'none'};
                    text-shadow: ${previewShadow};
                    color: ${element.color};
                    text-align: ${element.align};
                    pointer-events: none;
                    white-space: nowrap;
                    overflow: visible;
                    display: inline-block;
                    min-width: max-content;
                `;
                previewArea.appendChild(textDiv);
            });
            
            console.log('‚úì Preview updated to match design area');
        }

        // ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
        function exportCertificates() {
            if (textElements.length === 0) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å');
                return;
            }

            // ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            const previewSelect = document.getElementById('previewSelect');
            const names = Array.from(previewSelect.options).map(opt => opt.value).filter(v => v);
            
            if (names.length === 0) {
                alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Upload CSV ‡∏Å‡πà‡∏≠‡∏ô');
                return;
            }

            // ‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤ export ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            const exportAll = confirm(`‡∏û‡∏ö ${names.length} ‡∏ä‡∏∑‡πà‡∏≠\n\n‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å:\n‚úì OK = ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n‚úó Cancel = ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å`);
            
            const namesToExport = exportAll ? names : [document.getElementById('previewSelect').value];
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á ZIP ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏≤‡∏¢‡πÜ ‡∏ï‡∏±‡∏ß (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô modern browser ‡∏ó‡∏µ‡πà support)
            exportMultipleCertificates(namesToExport);
        }

        // ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å certificate ‡∏´‡∏•‡∏≤‡∏¢‡πÜ ‡∏ä‡∏∑‡πà‡∏≠
        async function exportMultipleCertificates(names) {
            let exported = 0;
            const total = names.length;
            
            for (let i = 0; i < names.length; i++) {
                const name = names[i];
                
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á canvas ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û
                const canvas = document.createElement('canvas');
                const ctx = canvas.getContext('2d');
                
                // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ canvas (800x600 pixels)
                canvas.width = 800;
                canvas.height = 600;
                
                // ‡∏î‡∏∂‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
                const designArea = document.getElementById('design-area');
                const bgStyle = window.getComputedStyle(designArea).backgroundImage;
                
                // ‡∏ß‡∏≤‡∏î‡πÅ‡∏•‡∏∞ download
                await drawAndDownloadCertificate(canvas, ctx, bgStyle, name, i, total);
            }
            
            alert(`‚úì ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à ${total} ‡πÉ‡∏ö`);
        }

        // ‡∏ß‡∏≤‡∏î‡πÅ‡∏•‡∏∞ download certificate ‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
        function drawAndDownloadCertificate(canvas, ctx, bgStyle, name, index, total) {
            return new Promise((resolve) => {
                // ‡∏ß‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
                const bgImg = new Image();
                bgImg.crossOrigin = 'anonymous';
                
                bgImg.onload = function() {
                    ctx.drawImage(bgImg, 0, 0, 800, 600);
                    drawTextElementsWithName(ctx, name);
                    downloadPNG(canvas, name);
                    
                    // ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ browser ‡πÑ‡∏°‡πà lag
                    setTimeout(resolve, 100);
                };
                
                bgImg.onerror = function() {
                    // ‡∏ñ‡πâ‡∏≤‡∏£‡∏π‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡πÅ‡∏ó‡∏ô
                    ctx.fillStyle = '#ffffff';
                    ctx.fillRect(0, 0, 800, 600);
                    drawTextElementsWithName(ctx, name);
                    downloadPNG(canvas, name);
                    
                    setTimeout(resolve, 100);
                };
                
                // ‡∏î‡∏∂‡∏á URL ‡∏à‡∏≤‡∏Å background-image style
                if (bgStyle && bgStyle !== 'none') {
                    const urlMatch = bgStyle.match(/url\(['"]?(.+?)['"]?\)/);
                    if (urlMatch) {
                        bgImg.src = urlMatch[1];
                    } else {
                        bgImg.onerror();
                    }
                } else {
                    bgImg.onerror();
                }
            });
        }

        // ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å designs ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô ZIP file (client-side: PNG + ZIP)
        async function exportDesignsZip() {
            console.log('Exporting designs as ZIP (client-side)...');

            // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å preview select
            const previewSelect = document.getElementById('previewSelect');
            const names = previewSelect ? Array.from(previewSelect.options).map(o => o.value).filter(v => v) : [];
            if (names.length === 0) {
                alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Upload CSV ‡∏Å‡πà‡∏≠‡∏ô');
                return;
            }

            const zip = new JSZip();
            const folder = zip.folder('designs');

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á canvas ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö exportCertificates
            for (let i = 0; i < names.length; i++) {
                const name = names[i];
                const canvas = document.createElement('canvas');
                canvas.width = 800;
                canvas.height = 600;
                const ctx = canvas.getContext('2d');

                // ‡∏ß‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á ‡πÅ‡∏•‡∏∞ text elements
                try {
                    await drawToCanvasForExport(canvas, ctx, name);
                } catch (err) {
                    console.error('Error drawing for', name, err);
                }

                // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô blob
                const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png'));
                const safeName = name.replace(/[^a-zA-Z0-900-\u0E7F]/g, '_').substring(0, 50);
                folder.file(`certificate_${safeName}_${Date.now()}.png`, blob);
            }

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á ZIP ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
            const content = await zip.generateAsync({ type: 'blob' });
            const userId = '<?= $_SESSION['user_id'] ?>';
            saveAs(content, `designs_${userId}_${new Date().toISOString().replace(/[:.]/g,'')}.zip`);
            console.log('ZIP download triggered');
        }

        // ‡∏ß‡∏≤‡∏î‡∏•‡∏á canvas ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö export (‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö exportCertificates ‡πÅ‡∏ï‡πà‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô async helper)
        function drawToCanvasForExport(canvas, ctx, name) {
            return new Promise((resolve) => {
                const designArea = document.getElementById('design-area');
                const bgStyle = window.getComputedStyle(designArea).backgroundImage;

                const bgImg = new Image();
                bgImg.crossOrigin = 'anonymous';
                bgImg.onload = function() {
                    ctx.drawImage(bgImg, 0, 0, canvas.width, canvas.height);
                    drawTextElementsWithName(ctx, name);
                    resolve();
                };
                bgImg.onerror = function() {
                    ctx.fillStyle = '#ffffff';
                    ctx.fillRect(0, 0, canvas.width, canvas.height);
                    drawTextElementsWithName(ctx, name);
                    resolve();
                };

                if (bgStyle && bgStyle !== 'none') {
                    const urlMatch = bgStyle.match(/url\(['"]?(.+?)['"]?\)/);
                    if (urlMatch) bgImg.src = urlMatch[1]; else bgImg.onerror();
                } else {
                    bgImg.onerror();
                }
            });
        }

        // ‡∏ß‡∏≤‡∏î text elements ‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        function drawTextElementsWithName(ctx, displayName) {
            textElements.forEach((element, index) => {
                // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ font
                ctx.font = element.fontWeight + ' ' + element.fontSize + 'px ' + element.fontFamily;
                ctx.fillStyle = element.color;
                ctx.textBaseline = 'top';  // ‡πÉ‡∏´‡πâ y coordinate ‡πÄ‡∏õ‡πá‡∏ô top ‡∏Ç‡∏≠‡∏á text ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô DOM
                
                // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ alignment
                switch(element.align) {
                    case 'center': ctx.textAlign = 'center'; break;
                    case 'right': ctx.textAlign = 'right'; break;
                    default: ctx.textAlign = 'left';
                }
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° shadow ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
                switch(element.textShadow) {
                    case 'light':
                        ctx.shadowColor = 'rgba(0,0,0,0.3)';
                        ctx.shadowBlur = 2;
                        ctx.shadowOffsetX = 1;
                        ctx.shadowOffsetY = 1;
                        break;
                    case 'medium':
                        ctx.shadowColor = 'rgba(0,0,0,0.5)';
                        ctx.shadowBlur = 4;
                        ctx.shadowOffsetX = 2;
                        ctx.shadowOffsetY = 2;
                        break;
                    case 'strong':
                        ctx.shadowColor = 'rgba(0,0,0,0.7)';
                        ctx.shadowBlur = 6;
                        ctx.shadowOffsetX = 3;
                        ctx.shadowOffsetY = 3;
                        break;
                    default:
                        ctx.shadowColor = 'transparent';
                }
                
                // ‡∏ß‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (replace {name} ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á)
                const displayText = element.content.replace(/{name}/g, displayName);
                console.log(`Export canvas text ${index}: pos(${element.x}, ${element.y}), text="${displayText.substring(0, 20)}", align=${element.align}, size=${element.fontSize}`);
                ctx.fillText(displayText, element.x, element.y);
                
                // ‡∏•‡πâ‡∏≤‡∏á shadow
                ctx.shadowColor = 'transparent';
            });
        }

        // Download PNG
        function downloadPNG(canvas, name) {
            canvas.toBlob(function(blob) {
                const url = URL.createObjectURL(blob);
                const link = document.createElement('a');
                link.href = url;
                
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
                const safeName = name.replace(/[^a-zA-Z0-9\u0E00-\u0E7F]/g, '_').substring(0, 50);
                link.download = `certificate_${safeName}_${new Date().getTime()}.png`;
                
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                URL.revokeObjectURL(url);
            });
        }

        // Template presets
        function loadTemplate(templateType) {
            clearAll();
            
            switch(templateType) {
                case 'government':
                    // Template ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£
                    textElements = [
                        {
                            id: 'text_header',
                            content: '‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏™‡∏∏‡∏Ç',
                            x: 300, y: 80,
                            fontSize: 28, fontFamily: 'Sarabun', fontWeight: '600',
                            textDecoration: 'none', textShadow: 'none',
                            color: '#1a237e', align: 'center'
                        },
                        {
                            id: 'text_title', 
                            content: '‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏Ñ‡∏∏‡∏ì',
                            x: 300, y: 140,
                            fontSize: 48, fontFamily: 'Sarabun', fontWeight: '700',
                            textDecoration: 'none', textShadow: 'light',
                            color: '#c62828', align: 'center'
                        },
                        {
                            id: 'text_name',
                            content: '‡∏Ç‡∏≠‡∏°‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πà\\n{name}',
                            x: 300, y: 220,
                            fontSize: 36, fontFamily: 'TH Sarabun New', fontWeight: '500',
                            textDecoration: 'none', textShadow: 'none',
                            color: '#1565c0', align: 'center'
                        },
                        {
                            id: 'text_desc',
                            content: '‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô\\n‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏±‡∏Å‡∏©‡πå',
                            x: 300, y: 320,
                            fontSize: 24, fontFamily: 'Sarabun', fontWeight: '400',
                            textDecoration: 'none', textShadow: 'none',
                            color: '#424242', align: 'center'
                        }
                    ];
                    break;
                    
                case 'modern':
                    // Template ‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô
                    textElements = [
                        {
                            id: 'text_title',
                            content: 'CERTIFICATE',
                            x: 300, y: 100,
                            fontSize: 52, fontFamily: 'Kanit', fontWeight: '800',
                            textDecoration: 'none', textShadow: 'glow',
                            color: '#e91e63', align: 'center'
                        },
                        {
                            id: 'text_subtitle',
                            content: '‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
                            x: 300, y: 160,
                            fontSize: 28, fontFamily: 'Prompt', fontWeight: '300',
                            textDecoration: 'none', textShadow: 'light',
                            color: '#9c27b0', align: 'center'
                        },
                        {
                            id: 'text_name',
                            content: '{name}',
                            x: 300, y: 250,
                            fontSize: 44, fontFamily: 'Prompt', fontWeight: '600',
                            textDecoration: 'underline', textShadow: 'medium',
                            color: '#1e88e5', align: 'center'
                        },
                        {
                            id: 'text_footer',
                            content: '‡∏Ç‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ\\n‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
                            x: 300, y: 340,
                            fontSize: 20, fontFamily: 'IBM Plex Sans Thai', fontWeight: '400',
                            textDecoration: 'none', textShadow: 'none',
                            color: '#455a64', align: 'center'
                        }
                    ];
                    break;
                    
                case 'elegant':
                    // Template ‡∏´‡∏£‡∏π‡∏´‡∏£‡∏≤
                    textElements = [
                        {
                            id: 'text_ornament_top',
                            content: '‚úßÔΩ•Ôæü: *‚úßÔΩ•Ôæü:* CERTIFICATE *:ÔΩ•Ôæü‚úß*:ÔΩ•Ôæü‚úß',
                            x: 300, y: 80,
                            fontSize: 24, fontFamily: 'Georgia', fontWeight: '400',
                            textDecoration: 'none', textShadow: 'light',
                            color: '#8e24aa', align: 'center'
                        },
                        {
                            id: 'text_title',
                            content: '‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏¢‡∏®',
                            x: 300, y: 140,
                            fontSize: 42, fontFamily: 'EucrosiaUPC', fontWeight: '600',
                            textDecoration: 'none', textShadow: 'medium',
                            color: '#4a148c', align: 'center'
                        },
                        {
                            id: 'text_name',
                            content: '~ {name} ~',
                            x: 300, y: 220,
                            fontSize: 38, fontFamily: 'DilleniaUPC', fontWeight: '500',
                            textDecoration: 'none', textShadow: 'light',
                            color: '#c2185b', align: 'center'
                        },
                        {
                            id: 'text_desc',
                            content: '‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏Ñ‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à\\n‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏≠‡∏±‡∏ô‡∏á‡∏î‡∏á‡∏≤‡∏°',
                            x: 300, y: 300,
                            fontSize: 22, fontFamily: 'JasmineUPC', fontWeight: '400',
                            textDecoration: 'none', textShadow: 'none',
                            color: '#6a1b9a', align: 'center'
                        }
                    ];
                    break;
            }
            
            elementCounter = textElements.length;
            renderTextElements();
            updatePreview();
            document.getElementById('empty-state').style.display = 'none';
        }
        
        // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        function clearAll(showConfirm = true) {
            if (showConfirm && !confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                return;
            }
            textElements = [];
            elementCounter = 0;
            renderTextElements();
            updatePreview();
            document.getElementById('empty-state').style.display = 'flex';
        }

        // Event listeners
        document.getElementById('previewSelect')?.addEventListener('change', updatePreview);

        // ‡πÅ‡∏™‡∏î‡∏á Template Gallery
        function showTemplateGallery() {
            new bootstrap.Modal(document.getElementById('templateGalleryModal')).show();
        }
        
        // ‡πÇ‡∏´‡∏•‡∏î template ‡∏à‡∏≤‡∏Å gallery
        function loadTemplateFromGallery(templateId) {
            clearAll(false); // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á confirm
            
            const templates = {
                'gov_standard': [
                    {
                        id: 'text_ministry', content: '‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ò‡∏¥‡∏Å‡∏≤‡∏£',
                        x: 400, y: 80, fontSize: 28, fontFamily: 'Sarabun', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'none', color: '#1a237e', align: 'center'
                    },
                    {
                        id: 'text_title', content: '‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏Ñ‡∏∏‡∏ì',
                        x: 400, y: 140, fontSize: 48, fontFamily: 'Sarabun', fontWeight: '700',
                        textDecoration: 'none', textShadow: 'light', color: '#c62828', align: 'center'
                    },
                    {
                        id: 'text_name', content: '‡∏Ç‡∏≠‡∏°‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πà\\n{name}',
                        x: 400, y: 220, fontSize: 36, fontFamily: 'TH Sarabun New', fontWeight: '500',
                        textDecoration: 'none', textShadow: 'none', color: '#1565c0', align: 'center'
                    }
                ],
                'gov_formal': [
                    {
                        id: 'text_course', content: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£',
                        x: 400, y: 100, fontSize: 32, fontFamily: 'Sarabun', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'none', color: '#2e7d32', align: 'center'
                    },
                    {
                        id: 'text_title', content: '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏Ç‡∏≠‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡πà‡∏á',
                        x: 400, y: 150, fontSize: 28, fontFamily: 'Prompt', fontWeight: '500',
                        textDecoration: 'none', textShadow: 'light', color: '#1b5e20', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}\\n‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ö‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
                        x: 400, y: 250, fontSize: 32, fontFamily: 'Sarabun', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'medium', color: '#4caf50', align: 'center'
                    }
                ],
                'gov_achievement': [
                    {
                        id: 'text_award', content: 'üèÜ ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üèÜ',
                        x: 400, y: 120, fontSize: 36, fontFamily: 'Kanit', fontWeight: '700',
                        textDecoration: 'none', textShadow: 'glow', color: '#c2185b', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}',
                        x: 400, y: 200, fontSize: 40, fontFamily: 'Prompt', fontWeight: '600',
                        textDecoration: 'underline', textShadow: 'medium', color: '#e91e63', align: 'center'
                    },
                    {
                        id: 'text_position', content: '‡∏ú‡∏π‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ',
                        x: 400, y: 280, fontSize: 28, fontFamily: 'Sarabun', fontWeight: '500',
                        textDecoration: 'none', textShadow: 'light', color: '#880e4f', align: 'center'
                    }
                ],
                'modern_tech': [
                    {
                        id: 'text_title', content: 'CERTIFICATE',
                        x: 400, y: 100, fontSize: 52, fontFamily: 'Kanit', fontWeight: '800',
                        textDecoration: 'none', textShadow: 'glow', color: '#1e88e5', align: 'center'
                    },
                    {
                        id: 'text_subtitle', content: 'of Technology Excellence',
                        x: 400, y: 160, fontSize: 24, fontFamily: 'IBM Plex Sans Thai', fontWeight: '400',
                        textDecoration: 'none', textShadow: 'light', color: '#42a5f5', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}',
                        x: 400, y: 240, fontSize: 42, fontFamily: 'Prompt', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'medium', color: '#0d47a1', align: 'center'
                    }
                ],
                'modern_creative': [
                    {
                        id: 'text_title', content: 'üé® CREATIVE AWARD üé®',
                        x: 400, y: 120, fontSize: 36, fontFamily: 'Kanit', fontWeight: '700',
                        textDecoration: 'none', textShadow: 'glow', color: '#9c27b0', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}',
                        x: 400, y: 200, fontSize: 40, fontFamily: 'Prompt', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'medium', color: '#ba68c8', align: 'center'
                    },
                    {
                        id: 'text_desc', content: '‡∏ô‡∏±‡∏Å‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô\\n‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏µ 2568',
                        x: 400, y: 280, fontSize: 24, fontFamily: 'Sarabun', fontWeight: '500',
                        textDecoration: 'none', textShadow: 'light', color: '#7b1fa2', align: 'center'
                    }
                ],
                'modern_business': [
                    {
                        id: 'text_title', content: 'BUSINESS EXCELLENCE',
                        x: 400, y: 110, fontSize: 38, fontFamily: 'Kanit', fontWeight: '700',
                        textDecoration: 'none', textShadow: 'medium', color: '#37474f', align: 'center'
                    },
                    {
                        id: 'text_subtitle', content: 'Certificate of Achievement',
                        x: 400, y: 160, fontSize: 22, fontFamily: 'IBM Plex Sans Thai', fontWeight: '400',
                        textDecoration: 'none', textShadow: 'light', color: '#607d8b', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}',
                        x: 400, y: 230, fontSize: 36, fontFamily: 'Prompt', fontWeight: '600',
                        textDecoration: 'underline', textShadow: 'medium', color: '#263238', align: 'center'
                    }
                ],
                'elegant_gold': [
                    {
                        id: 'text_title', content: '‚ú® GOLDEN AWARD ‚ú®',
                        x: 400, y: 120, fontSize: 40, fontFamily: 'Georgia', fontWeight: '700',
                        textDecoration: 'none', textShadow: 'glow', color: '#bf9000', align: 'center'
                    },
                    {
                        id: 'text_subtitle', content: '‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏¢‡∏®',
                        x: 400, y: 180, fontSize: 32, fontFamily: 'EucrosiaUPC', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'medium', color: '#ff8f00', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}',
                        x: 400, y: 250, fontSize: 38, fontFamily: 'DilleniaUPC', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'strong', color: '#e65100', align: 'center'
                    }
                ],
                'elegant_royal': [
                    {
                        id: 'text_title', content: 'üëë ROYAL CERTIFICATE üëë',
                        x: 400, y: 110, fontSize: 32, fontFamily: 'Georgia', fontWeight: '700',
                        textDecoration: 'none', textShadow: 'glow', color: '#4a148c', align: 'center'
                    },
                    {
                        id: 'text_subtitle', content: '‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏¢‡∏®‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î',
                        x: 400, y: 170, fontSize: 28, fontFamily: 'EucrosiaUPC', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'medium', color: '#7b1fa2', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}',
                        x: 400, y: 230, fontSize: 36, fontFamily: 'DilleniaUPC', fontWeight: '600',
                        textDecoration: 'none', textShadow: 'strong', color: '#8e24aa', align: 'center'
                    }
                ],
                'elegant_classic': [
                    {
                        id: 'text_title', content: 'üèõÔ∏è CLASSIC HONOR üèõÔ∏è',
                        x: 400, y: 120, fontSize: 34, fontFamily: 'Times New Roman', fontWeight: '700',
                        textDecoration: 'none', textShadow: 'medium', color: '#5d4037', align: 'center'
                    },
                    {
                        id: 'text_subtitle', content: 'Certificate of Merit',
                        x: 400, y: 180, fontSize: 26, fontFamily: 'Georgia', fontWeight: '400',
                        textDecoration: 'none', textShadow: 'light', color: '#6d4c41', align: 'center'
                    },
                    {
                        id: 'text_name', content: '{name}',
                        x: 400, y: 240, fontSize: 32, fontFamily: 'JasmineUPC', fontWeight: '600',
                        textDecoration: 'underline', textShadow: 'medium', color: '#8d6e63', align: 'center'
                    }
                ]
            };
            
            if (templates[templateId]) {
                textElements = templates[templateId];
                elementCounter = textElements.length;
                document.body.setAttribute('data-current-template', templateId);
                renderTextElements();
                updatePreview();
                document.getElementById('empty-state').style.display = 'none';
                
                // ‡∏ã‡πà‡∏≠‡∏ô modal (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                const modalElement = document.getElementById('templateGalleryModal');
                if (modalElement) {
                    const modalInstance = bootstrap.Modal.getInstance(modalElement);
                    if (modalInstance) {
                        modalInstance.hide();
                    }
                }
                
                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
                saveToHistory(templateId);
            }
        }
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        function saveToHistory(templateId) {
            let history = JSON.parse(localStorage.getItem('certificateHistory') || '[]');
            
            const historyItem = {
                id: templateId,
                timestamp: new Date().toISOString(),
                elements: JSON.parse(JSON.stringify(textElements)) // deep copy
            };
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
            history.unshift(historyItem);
            
            // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà 6 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            history = history.slice(0, 6);
            
            localStorage.setItem('certificateHistory', JSON.stringify(history));
            renderHistory();
        }
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        function renderHistory() {
            const container = document.getElementById('history-container');
            
            // ‡∏ñ‡πâ‡∏≤ container ‡πÑ‡∏°‡πà‡∏û‡∏ö ‡πÉ‡∏´‡πâ‡∏≠‡∏≠‡∏Å (element ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°)
            if (!container) {
                console.warn('‚ö†Ô∏è history-container element not found yet, skipping renderHistory');
                return;
            }
            
            const history = JSON.parse(localStorage.getItem('certificateHistory') || '[]');
            
            if (history.length === 0) {
                container.innerHTML = '<div class=\"col-12 text-center text-muted small\">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á</div>';
                return;
            }
            
            container.innerHTML = '';
            
            history.forEach((item, index) => {
                const date = new Date(item.timestamp).toLocaleDateString('th-TH', {
                    day: '2-digit',
                    month: '2-digit',
                    year: '2-digit'
                });
                const time = new Date(item.timestamp).toLocaleTimeString('th-TH', {hour: '2-digit', minute: '2-digit'});
                
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏≤‡∏° template type
                let icon = 'üìÑ';
                if (item.id.includes('gov')) icon = 'üèõÔ∏è';
                else if (item.id.includes('modern')) icon = '‚≠ê';
                else if (item.id.includes('elegant')) icon = 'üëë';
                else if (item.id.includes('custom')) icon = '‚ú®';
                
                const historyHtml = `
                    <div class=\"col-6 col-lg-12 mb-2\">
                        <div class=\"history-item border rounded p-2\" onclick=\"loadFromHistory(${index})\" title=\"‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î\">
                            <div class=\"text-center\">
                                <div class=\"fs-6 mb-1\">${icon}</div>
                                <div class=\"fw-bold\" style=\"font-size: 10px; color: #495057;\">#${index + 1}</div>
                                <div style=\"font-size: 9px; color: #6c757d; line-height: 1.2;\">
                                    ${date}<br>${time}
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                container.insertAdjacentHTML('beforeend', historyHtml);
            });
        }
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        function loadFromHistory(index) {
            const history = JSON.parse(localStorage.getItem('certificateHistory') || '[]');
            if (history[index]) {
                clearAll(false);
                textElements = JSON.parse(JSON.stringify(history[index].elements)); // deep copy
                elementCounter = textElements.length;
                renderTextElements();
                updatePreview();
                document.getElementById('empty-state').style.display = 'none';
            }
        }
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á clearAll function
        function clearAll(showConfirm = true) {
            if (showConfirm && !confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                return;
            }
            textElements = [];
            elementCounter = 0;
            renderTextElements();
            updatePreview();
            document.getElementById('empty-state').style.display = 'flex';
        }

        // ‚ú® Select Background Template Function
        function selectBackgroundTemplate(templatePath) {
            // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Design Area background
            const designArea = document.getElementById('design-area');
            designArea.style.backgroundImage = `url('${templatePath}')`;
            
            // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Preview Area background ‡∏î‡πâ‡∏ß‡∏¢
            const previewArea = document.getElementById('preview-area');
            previewArea.style.backgroundImage = `url('${templatePath}')`;
            previewArea.style.backgroundSize = 'cover';
            previewArea.style.backgroundPosition = 'center';
            previewArea.style.backgroundRepeat = 'no-repeat';
            previewArea.style.backgroundColor = 'rgba(255, 255, 255, 0.05)';
            
            // Highlight ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            document.querySelectorAll('.template-card').forEach(card => {
                card.style.opacity = '0.6';
                card.style.border = 'none';
            });
            event.currentTarget.style.opacity = '1';
            event.currentTarget.style.border = '3px solid #28a745';
            
            // ‡πÅ‡∏™‡∏î‡∏á notification
            showNotification('‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', 'success');
        }
        
        // Notification Function
        function showNotification(message, type = 'info') {
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á notification element
            const notification = document.createElement('div');
            notification.className = `alert alert-${type} position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 250px; animation: slideIn 0.3s ease;';
            notification.innerHTML = message;
            
            document.body.appendChild(notification);
            
            // ‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }
        
        // CSS Animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideIn {
                from { transform: translateX(400px); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            @keyframes slideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(400px); opacity: 0; }
            }
            .template-card {
                position: relative;
            }
            .template-card:hover {
                transform: translateY(-4px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15) !important;
            }
        `;
        document.head.appendChild(style);

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Design ‡∏•‡∏á Database ‡πÅ‡∏•‡∏∞ LocalStorage
        async function saveDesign() {
            const designName = prompt('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ Design:', 'Design ' + new Date().toLocaleString('th-TH'));
            if (!designName) return;

            const templateId = document.body.getAttribute('data-current-template') || 'custom';
            const bgImage = document.getElementById('design-area')?.style.backgroundImage?.replace(/url\(["']?([^"']+)["']?\)/g, '$1') || '';

            try {
                const response = await fetch('save_design.php', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        design_name: designName,
                        template_id: templateId,
                        bg_image: bgImage,
                        text_elements: textElements
                    })
                });

                const result = await response.json();
                if (result.success) {
                    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á LocalStorage ‡∏î‡πâ‡∏ß‡∏¢ (‡πÄ‡∏û‡∏∑‡πà‡∏≠ offline/cache)
                    saveToLocalStorage(result.design_id, designName, templateId, bgImage, textElements);
                    
                    alert('‚úì ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Design ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                    loadDesignHistory();
                } else {
                    alert('‚úó ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + result.error);
                }
            } catch (error) {
                console.error('Error saving design:', error);
                alert('‚úó ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
            }
        }
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Design ‡∏•‡∏á LocalStorage
        function saveToLocalStorage(id, name, template, bg, elements) {
            let designs = JSON.parse(localStorage.getItem('user_designs_local') || '[]');
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ID ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏´‡∏°
            const index = designs.findIndex(d => d.id == id);
            
            const designObj = {
                id: id,
                name: name,
                template_id: template,
                bg_image: bg,
                text_elements: elements,
                saved_at: new Date().toISOString()
            };
            
            if (index >= 0) {
                designs[index] = designObj;
            } else {
                designs.unshift(designObj);
            }
            
            // ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà 50 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            designs = designs.slice(0, 50);
            
            localStorage.setItem('user_designs_local', JSON.stringify(designs));
            console.log('Saved to LocalStorage:', designObj.name);
        }

        // ‡πÇ‡∏´‡∏•‡∏î Design History ‡∏à‡∏≤‡∏Å API + LocalStorage
        async function loadDesignHistory() {
            console.log('üü¢ loadDesignHistory called');
            
            // ‡∏£‡∏≠‡πÉ‡∏´‡πâ element ‡∏û‡∏£‡πâ‡∏≠‡∏° (retry ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á)
            let historyList = null;
            let retries = 0;
            const maxRetries = 30; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 10 ‡πÄ‡∏õ‡πá‡∏ô 30
            const retryDelay = 150; // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 200 ‡πÄ‡∏õ‡πá‡∏ô 150ms ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡πá‡∏ß
            
            while (!historyList && retries < maxRetries) {
                historyList = document.getElementById('designHistoryList');
                if (!historyList) {
                    console.warn(`‚è≥ Retry ${retries + 1}/${maxRetries}: designHistoryList not found, waiting ${retryDelay}ms...`);
                    await new Promise(resolve => setTimeout(resolve, retryDelay));
                    retries++;
                } else {
                    console.log(`‚úÖ Found designHistoryList after ${retries} retries (${retries * retryDelay}ms total)`);
                }
            }
            
            if (!historyList) {
                console.error('‚ùå designHistoryList element NOT FOUND after', maxRetries, 'retries (total', maxRetries * retryDelay, 'ms). Element may not exist in HTML.');
                return;
            }
            
            console.log('‚úì‚úì designHistoryList element found and ready');
            
            try {
                // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏û‡∏£‡πâ‡∏≠‡∏° cache busting
                console.log('üåê Fetching design history from API...');
                const url = 'get_design_history.php?t=' + Date.now(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô browser cache
                const response = await fetch(url, {
                    method: 'GET',
                    headers: {
                        'Cache-Control': 'no-cache, no-store, must-revalidate',
                        'Pragma': 'no-cache'
                    },
                    cache: 'no-store'
                });
                
                console.log('üì° API response status:', response.status);
                
                if (!response.ok) {
                    console.error('‚ùå API returned HTTP error:', response.status);
                    throw new Error(`HTTP Error: ${response.status}`);
                }
                
                const result = await response.json();
                console.log('üì• API result received:', result);
                console.log('üìä DB count from API:', result.db_count || 0);
                console.log('üìã Designs array from API:', result.designs);
                console.log('üìã Designs length:', result.designs ? result.designs.length : 'undefined');

                // ‡∏£‡∏ß‡∏° DB + LocalStorage (DB ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å)
                let allDesigns = [];
                
                // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å)
                if (result.success && result.designs && result.designs.length > 0) {
                    allDesigns = result.designs.map(dbDesign => ({
                        id: dbDesign.id,
                        name: dbDesign.name,
                        template_id: dbDesign.template,
                        bg_image: '',
                        text_elements: [],
                        saved_at: dbDesign.updated ? dbDesign.updated : (dbDesign.created || new Date().toISOString())
                    }));
                    console.log('‚úì‚úì Loaded from DB:', allDesigns.length, 'designs');
                    console.log('‚úì‚úì First design sample:', allDesigns[0]);
                } else {
                    console.warn('‚ö†Ô∏è No DB designs or success = false. Result:', result);
                }
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å LocalStorage ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (offline)
                const localDesigns = JSON.parse(localStorage.getItem('user_designs_local') || '[]');
                console.log('‚úì LocalStorage designs:', localDesigns.length);
                
                localDesigns.forEach(localDesign => {
                    const exists = allDesigns.find(d => d.id == localDesign.id);
                    if (!exists) {
                        allDesigns.push(localDesign);
                    }
                });

                if (allDesigns.length === 0) {
                    historyList.innerHTML = '<div class="text-center text-muted py-3"><small><i class="fas fa-inbox"></i> ‡πÑ‡∏°‡πà‡∏°‡∏µ Design ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ</small></div>';
                    console.log('‚ö†Ô∏è No designs found total');
                    return;
                }

                // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ (‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡πÄ‡∏Å‡πà‡∏≤)
                historyList.innerHTML = allDesigns
                    .sort((a, b) => new Date(b.saved_at || 0) - new Date(a.saved_at || 0))
                    .map(design => `
                    <div class="list-group-item p-2 border-bottom" style="background: #f9f9f9; cursor: pointer;" 
                         onmouseover="this.style.background='#e8f4f8'" 
                         onmouseout="this.style.background='#f9f9f9'"
                         onclick="loadSavedDesign(${design.id})">
                        <div class="d-flex justify-content-between align-items-start">
                            <div class="flex-grow-1" style="min-width: 0;">
                                <small class="fw-bold text-truncate d-block">${design.name}</small>
                                <small class="text-muted d-block" style="font-size: 9px;">
                                    ${design.saved_at ? new Date(design.saved_at).toLocaleString('th-TH') : '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'}
                                </small>
                            </div>
                            <button type="button" class="btn btn-sm btn-danger btn-sm p-0" 
                                    style="width: 20px; height: 20px; line-height: 1;"
                                    onclick="deleteDesign(event, ${design.id})" title="‡∏•‡∏ö">
                                √ó
                            </button>
                        </div>
                    </div>
                `).join('');
                console.log('‚úì‚úì‚úì Design history rendered:', allDesigns.length, 'items');
            } catch (error) {
                console.error('Error loading history:', error);
                // ‡∏ñ‡πâ‡∏≤ API error ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ LocalStorage ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                const localDesigns = JSON.parse(localStorage.getItem('user_designs_local') || '[]');
                console.log('Fallback to LocalStorage:', localDesigns.length);
                
                if (localDesigns.length > 0) {
                    historyList.innerHTML = localDesigns
                        .sort((a, b) => new Date(b.saved_at || 0) - new Date(a.saved_at || 0))
                        .map(design => `
                        <div class="list-group-item p-2 border-bottom" style="background: #f9f9f9; cursor: pointer;" 
                             onmouseover="this.style.background='#e8f4f8'" 
                             onmouseout="this.style.background='#f9f9f9'"
                             onclick="loadSavedDesign(${design.id})">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1" style="min-width: 0;">
                                    <small class="fw-bold text-truncate d-block">${design.name}</small>
                                </div>
                                <button type="button" class="btn btn-sm btn-danger p-0" 
                                        style="width: 20px; height: 20px; line-height: 1;"
                                        onclick="deleteDesign(event, ${design.id})" title="‡∏•‡∏ö">
                                    √ó
                                </button>
                            </div>
                        </div>
                    `).join('');
                } else {
                    historyList.innerHTML = '<div class="text-center text-muted py-3"><small><i class="fas fa-inbox"></i> ‡πÑ‡∏°‡πà‡∏°‡∏µ Design ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ</small></div>';
                }
            }
        }

        // ‡πÇ‡∏´‡∏•‡∏î Saved Design
        async function loadSavedDesign(designId) {
            try {
                // ‡∏•‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å LocalStorage ‡∏Å‡πà‡∏≠‡∏ô
                const localDesigns = JSON.parse(localStorage.getItem('user_designs_local') || '[]');
                const localDesign = localDesigns.find(d => d.id == designId);
                
                if (localDesign && localDesign.text_elements && localDesign.text_elements.length > 0) {
                    // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å LocalStorage ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                    textElements = localDesign.text_elements || [];
                    document.body.setAttribute('data-current-template', localDesign.template_id || 'custom');
                    
                    if (localDesign.bg_image) {
                        document.getElementById('design-area').style.backgroundImage = `url('${localDesign.bg_image}')`;
                        document.getElementById('preview-area').style.backgroundImage = `url('${localDesign.bg_image}')`;
                    }
                    
                    renderTextElements();
                    updatePreview();
                    alert('‚úì ‡πÇ‡∏´‡∏•‡∏î Design ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏à‡∏≤‡∏Å cache)');
                    return;
                }
                
                // ‡∏ñ‡πâ‡∏≤ LocalStorage ‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡∏à‡∏≤‡∏Å API
                const response = await fetch(`load_design.php?id=${designId}`);
                const result = await response.json();

                if (result.success) {
                    const design = result.design;
                    textElements = design.text_elements || [];
                    document.body.setAttribute('data-current-template', design.template_id);
                    
                    if (design.bg_image) {
                        document.getElementById('design-area').style.backgroundImage = `url('${design.bg_image}')`;
                        document.getElementById('preview-area').style.backgroundImage = `url('${design.bg_image}')`;
                        sessionStorage.setItem('bg_path', design.bg_image);
                    }
                    
                    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å LocalStorage ‡πÄ‡∏û‡∏∑‡πà‡∏≠ offline ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
                    saveToLocalStorage(design.id, design.name, design.template_id, design.bg_image, design.text_elements);
                    
                    renderTextElements();
                    updatePreview();
                    alert('‚úì ‡πÇ‡∏´‡∏•‡∏î Design ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                } else {
                    alert('‚úó ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î Design ‡πÑ‡∏î‡πâ');
                }
            } catch (error) {
                console.error('Error loading design:', error);
                alert('‚úó ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î');
            }
        }

        // ‡∏•‡∏ö Design
        async function deleteDesign(event, designId) {
            event.stopPropagation();
            if (!confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö Design ‡∏ô‡∏µ‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏´‡∏°?')) return;

            try {
                // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å LocalStorage
                let localDesigns = JSON.parse(localStorage.getItem('user_designs_local') || '[]');
                localDesigns = localDesigns.filter(d => d.id != designId);
                localStorage.setItem('user_designs_local', JSON.stringify(localDesigns));
                console.log('Deleted from LocalStorage:', designId);
                
                // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ñ‡πâ‡∏≤ server ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
                const response = await fetch('delete_design.php', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'id=' + designId
                });

                const result = await response.json();
                if (result.success) {
                    alert('‚úì ‡∏•‡∏ö Design ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                    loadDesignHistory();
                } else {
                    alert('‚úó ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏î‡πâ: ' + result.error);
                }
            } catch (error) {
                console.error('Error deleting design:', error);
                // ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á reload history ‡πÅ‡∏°‡πâ‡∏ß‡πà‡∏≤ server error ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏•‡∏ö‡∏à‡∏≤‡∏Å LocalStorage ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
                loadDesignHistory();
            }
        }

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ template ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üîµ DOMContentLoaded fired');
            renderHistory();
            loadTemplateFromGallery('gov_standard');
            console.log('üîµ About to call loadDesignHistory after 500ms');
            
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å loadDesignHistory ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 500ms ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ element ‡∏û‡∏£‡πâ‡∏≠‡∏°
            setTimeout(() => {
                console.log('üîµ Calling loadDesignHistory (try 1)');
                loadDesignHistory();
            }, 500);
            
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å loadDesignHistory ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 1.5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
            setTimeout(() => {
                console.log('üîµ Reloading design history after 1.5 seconds (try 2)');
                loadDesignHistory();
            }, 1500);
            
            // Bind preview select dropdown
            const previewSelect = document.getElementById('previewSelect');
            if (previewSelect) {
                previewSelect.addEventListener('change', function() {
                    console.log('Dropdown changed to:', this.value);
                    updatePreview();
                });
            } else {
                console.error('previewSelect dropdown not found');
            }
        });

        // ===== NAMES MANAGEMENT MODAL FUNCTIONS =====

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠ Preview ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà reload page)
        async function refreshPreviewDropdown() {
            try {
                const response = await fetch('get_certificate_names.php');
                const result = await response.json();
                
                if (result.success && result.names) {
                    const previewSelect = document.getElementById('previewSelect');
                    const currentValue = previewSelect.value;
                    
                    // ‡∏•‡πâ‡∏≤‡∏á options ‡πÄ‡∏Å‡πà‡∏≤
                    previewSelect.innerHTML = '';
                    
                    // ‡πÄ‡∏û‡∏¥‡πà‡∏° options ‡πÉ‡∏´‡∏°‡πà
                    result.names.forEach(name => {
                        const option = document.createElement('option');
                        option.value = name;
                        option.textContent = name;
                        previewSelect.appendChild(option);
                    });
                    
                    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á select ‡πÄ‡∏î‡∏¥‡∏° ‡∏ñ‡πâ‡∏≤ option ‡∏¢‡∏±‡∏á‡∏°‡∏µ
                    if (result.names.includes(currentValue)) {
                        previewSelect.value = currentValue;
                    } else if (result.names.length > 0) {
                        previewSelect.value = result.names[0];
                    }
                    
                    console.log('‚úì Preview dropdown refreshed');
                    updatePreview(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï preview
                }
            } catch (error) {
                console.error('Error refreshing dropdown:', error);
            }
        }

        // ‡πÅ‡∏™‡∏î‡∏á modal ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
        async function showNamesManagement() {
            console.log('Loading names management modal...');
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å API
            try {
                const response = await fetch('get_certificate_names.php');
                const result = await response.json();
                
                if (result.success && result.names) {
                    displayNamesModal(result.names);
                } else {
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + (result.error || 'Unknown error'));
                }
            } catch (error) {
                console.error('Error loading names:', error);
                alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ');
            }
        }

        // ‡πÅ‡∏™‡∏î‡∏á modal
        function displayNamesModal(names) {
            let htmlContent = `
            <div class="modal fade" id="namesManagementModal" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header bg-info text-white">
                            <h5 class="modal-title"><i class="fas fa-users me-2"></i>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ (${names.length} ‡∏Ñ‡∏ô)</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà -->
                            <div class="row g-2 mb-3">
                                <div class="col-sm-9">
                                    <input type="text" id="newNameInput" class="form-control form-control-sm" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà...">
                                </div>
                                <div class="col-sm-3">
                                    <button type="button" class="btn btn-success btn-sm w-100" onclick="addNewName()">
                                        <i class="fas fa-plus me-1"></i>‡πÄ‡∏û‡∏¥‡πà‡∏°
                                    </button>
                                </div>
                            </div>

                            <!-- ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ -->
                            <div class="list-group" style="max-height: 400px; overflow-y: auto;">
            `;

            names.forEach((name, index) => {
                htmlContent += `
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <span>${index + 1}. ${name}</span>
                        <div>
                            <button type="button" class="btn btn-warning btn-sm me-2" onclick="editName('${name}')">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteName('${name}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                `;
            });

            htmlContent += `
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">‡∏õ‡∏¥‡∏î</button>
                        </div>
                    </div>
                </div>
            </div>
            `;

            // ‡∏•‡∏ö modal ‡πÄ‡∏Å‡πà‡∏≤ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ ‡πÅ‡∏•‡∏∞ backdrop ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏´‡∏•‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
            const oldModal = document.getElementById('namesManagementModal');
            if (oldModal) oldModal.remove();
            // ‡∏•‡∏ö backdrop ‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà
            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
            // ‡πÄ‡∏≠‡∏≤ class modal-open ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å body
            document.body.classList.remove('modal-open');

            // ‡πÄ‡∏û‡∏¥‡πà‡∏° HTML ‡πÉ‡∏´‡∏°‡πà
            document.body.insertAdjacentHTML('beforeend', htmlContent);

            // ‡πÅ‡∏™‡∏î‡∏á modal
            const modalEl = document.getElementById('namesManagementModal');
            const modal = new bootstrap.Modal(modalEl);
            modal.show();
            // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ modal ‡∏ñ‡∏π‡∏Å‡∏ã‡πà‡∏≠‡∏ô ‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏≤‡∏á DOM ‡πÅ‡∏•‡∏∞ backdrop ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            modalEl.addEventListener('hidden.bs.modal', function() {
                modalEl.remove();
                document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
                document.body.classList.remove('modal-open');
            });
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà
        async function addNewName() {
            const input = document.getElementById('newNameInput');
            const newName = input.value.trim();

            if (!newName) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠');
                return;
            }

            try {
                const response = await fetch('manage_certificate_names.php', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ action: 'add', name: newName })
                });

                const result = await response.json();
                if (result.success) {
                    input.value = '';
                    console.log('‚úì Name added successfully');
                    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï dropdown ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                    await refreshPreviewDropdown();
                    // ‡πÇ‡∏´‡∏•‡∏î modal ‡πÉ‡∏´‡∏°‡πà
                    setTimeout(() => showNamesManagement(), 300);
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                console.error('Error adding name:', error);
                alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ');
            }
        }

        // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
        async function editName(oldName) {
            const newName = prompt(`‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠:\n(‡πÄ‡∏î‡∏¥‡∏°: ${oldName})`, oldName);
            
            if (newName === null || newName === oldName) return;
            if (!newName.trim()) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠');
                return;
            }

            try {
                const response = await fetch('manage_certificate_names.php', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ action: 'edit', old_name: oldName, name: newName.trim() })
                });

                const result = await response.json();
                if (result.success) {
                    console.log('‚úì Name updated successfully');
                    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï dropdown ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                    await refreshPreviewDropdown();
                    setTimeout(() => showNamesManagement(), 300);
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                console.error('Error editing name:', error);
                alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ');
            }
        }

        // ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
        async function deleteName(name) {
            if (!confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö "${name}"?`)) return;

            try {
                const response = await fetch('manage_certificate_names.php', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ action: 'delete', name: name })
                });

                const result = await response.json();
                if (result.success) {
                    console.log('‚úì Name deleted successfully');
                    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï dropdown ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                    await refreshPreviewDropdown();
                    setTimeout(() => showNamesManagement(), 300);
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                console.error('Error deleting name:', error);
                alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ');
            }
        }
    </script>
</body>
</html>
